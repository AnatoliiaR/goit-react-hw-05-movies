{"version":3,"file":"static/js/168.c95e18c3.chunk.js","mappings":"sPACA,GAAgB,KAAO,sBAAsB,KAAO,sBAAsB,KAAO,uB,SCK3EA,EAAU,WACd,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAYR,OAVAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,gHAESC,EAAAA,EAAAA,IAAYJ,GAFrB,gBAETK,EAFS,EAETA,QACRN,EAAeM,GAHE,yGAAH,qDAMlBF,GACD,GAAE,CAACH,IAEGF,EAAYQ,OAAS,GAC1B,eAAIC,UAAWC,EAAAA,KAAf,SACGV,EAAYW,KAAI,SAAAC,GACf,OACE,gBAAIH,UAAWC,EAAAA,KAAf,WACE,eAAGD,UAAWC,EAAAA,KAAd,qBAAmCE,EAAKC,WACxC,cAAGJ,UAAWC,EAAAA,KAAd,SAA2BE,EAAKE,YAFFF,EAAKV,GAKxC,MAGH,mCAEH,EAEDJ,EAAQiB,aAAe,CACrBf,YAAa,IASf,O,sLC5CMgB,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAa,mCAAG,+GAAOC,EAAP,+BAAc,EACnCC,EAAO,OACPC,EAAO,QAFc,SAGJR,EAASS,IAAT,oBAA0BD,EAA1B,YAAkCD,EAAlC,iBAA+CD,IAH3C,uBAGnBI,EAHmB,EAGnBA,KAHmB,kBAIpBA,GAJoB,2CAAH,qDAObC,EAAS,mCAAG,WAAMC,GAAN,+EACV,QADU,SAEAZ,EAASS,IAAT,WADV,QACU,YAAyBG,IAFzB,uBAEfF,EAFe,EAEfA,KAFe,kBAGhBA,GAHgB,2CAAH,sDAMTG,EAAY,mCAAG,WAAOC,GAAP,gGAAUR,EAAV,+BAAiB,EACrCE,EAAO,QADa,SAEHR,EAASS,IAAT,kBACVD,EADU,iBACGF,EADH,kBACiBQ,IAHd,uBAElBJ,EAFkB,EAElBA,KAFkB,kBAKnBA,GALmB,2CAAH,sDAQZK,EAAW,mCAAG,WAAMH,GAAN,+EACZ,QADY,SAEFZ,EAASS,IAAT,WADV,QACU,YAAyBG,EAAzB,aAFE,uBAEjBF,EAFiB,EAEjBA,KAFiB,kBAGlBA,GAHkB,2CAAH,sDAMXpB,EAAW,mCAAG,WAAMsB,GAAN,+EACZ,QADY,SAEFZ,EAASS,IAAT,WADV,QACU,YAAyBG,EAAzB,aAFE,uBAEjBF,EAFiB,EAEjBA,KAFiB,kBAGlBA,GAHkB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Reviews_list__okdpy\",\"name\":\"Reviews_name__kx3f+\",\"text\":\"Reviews_text__EqLvx\"};","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReview } from '../../services/api';\nimport style from './Reviews.module.css';\n\nconst Reviews = () => {\n  const [filmReviews, setFilmReviews] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const { results } = await fetchReview(id);\n        setFilmReviews(results);\n      } catch (error) {}\n    };\n    fetchReviews();\n  }, [id]);\n\n  return filmReviews.length > 0 ? (\n    <ul className={style.list}>\n      {filmReviews.map(film => {\n        return (\n          <li className={style.item} key={film.id}>\n            <p className={style.name}>Author: {film.author}</p>\n            <p className={style.text}>{film.content}</p>\n          </li>\n        );\n      })}\n    </ul>\n  ) : (\n    'We have not reviews for this film'\n  );\n};\n\nReviews.defaultProps = {\n  filmReviews: [],\n};\n\nReviews.propTypes = {\n  id: PropTypes.number.isRequired,\n  author: PropTypes.string,\n  content: PropTypes.string,\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '248abd3b176f582e9e747718a352534c',\n  },\n});\n\nexport const fetchTrending = async (page = 1) => {\n  const time = 'week';\n  const type = 'movie';\n  const { data } = await instance.get(`/trending/${type}/${time}?page=${page}`);\n  return data;\n};\n\nexport const fetchById = async Id => {\n  const type = 'movie';\n  const { data } = await instance.get(`/${type}/${Id}`);\n  return data;\n};\n\nexport const fetchByQuery = async (q, page = 1) => {\n  const type = 'movie';\n  const { data } = await instance.get(\n    `/search/${type}?page=${page}&query=${q}`\n  );\n  return data;\n};\n\nexport const fetchCredit = async Id => {\n  const type = 'movie';\n  const { data } = await instance.get(`/${type}/${Id}/credits`);\n  return data;\n};\n\nexport const fetchReview = async Id => {\n  const type = 'movie';\n  const { data } = await instance.get(`/${type}/${Id}/reviews`);\n  return data;\n};\n"],"names":["Reviews","useState","filmReviews","setFilmReviews","id","useParams","useEffect","fetchReviews","fetchReview","results","length","className","style","map","film","author","content","defaultProps","instance","axios","baseURL","params","api_key","fetchTrending","page","time","type","get","data","fetchById","Id","fetchByQuery","q","fetchCredit"],"sourceRoot":""}