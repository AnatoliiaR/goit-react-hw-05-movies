{"version":3,"file":"static/js/888.ba974fb0.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"MovieDetails_title__RBndM\",\"img\":\"MovieDetails_img__D3WH9\",\"info\":\"MovieDetails_info__0TKY1\",\"tleft\":\"MovieDetails_tleft__fJYXC\",\"td\":\"MovieDetails_td__rmCVc\",\"button\":\"MovieDetails_button__PGjyO\",\"list\":\"MovieDetails_list__y5Rs9\",\"link\":\"MovieDetails_link__wf74g\",\"subtitle\":\"MovieDetails_subtitle__8i-fx\"};","import { useState, useEffect } from 'react';\nimport {\n  NavLink,\n  useParams,\n  useLocation,\n  useNavigate,\n  Outlet,\n} from 'react-router-dom';\nimport { fetchById } from '../../services/api';\nimport style from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const [film, setFilm] = useState();\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  const location = useLocation();\n\n  const from = location.state?.from || '/';\n  const goBack = () => navigate(from);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const result = await fetchById(id);\n        setFilm(result);\n      } catch (error) {}\n    };\n    fetchMovie();\n  }, [id]);\n\n  return (\n    <>\n      <button className={style.button} onClick={goBack}>\n        Go back\n      </button>\n      <h1 className={style.title}>{film?.title}</h1>\n      <div className={style.info}>\n        <div>\n          <img\n            className={style.img}\n            src={`https://image.tmdb.org/t/p/w500${film?.poster_path}`}\n            alt={film?.title}\n          />\n        </div>\n        <div>\n          <table className={style.tleft}>\n            <tbody>\n              <tr>\n                <td className={style.td}>\n                  <p>User Score: </p>\n                </td>\n                <td>\n                  <span>{Math.round(film?.vote_average * 10)}%</span>\n                </td>\n              </tr>\n\n              <tr>\n                <td className={style.td}>\n                  <p>Genres:</p>\n                </td>\n                <td>\n                  <p>{film?.genres.map(genre => genre.name).join(', ')}</p>\n                </td>\n              </tr>\n              <tr>\n                <td className={style.td}>\n                  <p>Overview:</p>\n                </td>\n                <td>\n                  <p>{film?.overview}</p>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      <div>\n        <h3 className={style.subtitle}>Additional information</h3>\n\n        <ul className={style.list}>\n          <li>\n            <NavLink className={style.link} to=\"cast\" state={{ from }}>\n              Cast\n            </NavLink>\n          </li>\n          <li>\n            <NavLink className={style.link} to=\"reviews\" state={{ from }}>\n              Reviews\n            </NavLink>\n          </li>\n        </ul>\n        <Outlet />\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '248abd3b176f582e9e747718a352534c',\n  },\n});\n\nexport const fetchTrending = async (page = 1) => {\n  const time = 'week';\n  const type = 'movie';\n  const { data } = await instance.get(`/trending/${type}/${time}?page=${page}`);\n  return data;\n};\n\nexport const fetchById = async Id => {\n  const type = 'movie';\n  const { data } = await instance.get(`/${type}/${Id}`);\n  return data;\n};\n\nexport const fetchByQuery = async (q, page = 1) => {\n  const type = 'movie';\n  const { data } = await instance.get(\n    `/search/${type}?page=${page}&query=${q}`\n  );\n  return data;\n};\n\nexport const fetchCredit = async Id => {\n  const type = 'movie';\n  const { data } = await instance.get(`/${type}/${Id}/credits`);\n  return data;\n};\n\nexport const fetchReview = async Id => {\n  const type = 'movie';\n  const { data } = await instance.get(`/${type}/${Id}/reviews`);\n  return data;\n};\n"],"names":["useState","film","setFilm","id","useParams","navigate","useNavigate","from","useLocation","state","useEffect","fetchMovie","fetchById","result","className","style","onClick","title","src","poster_path","alt","Math","round","vote_average","genres","map","genre","name","join","overview","to","instance","axios","baseURL","params","api_key","fetchTrending","page","time","type","get","data","Id","fetchByQuery","q","fetchCredit","fetchReview"],"sourceRoot":""}