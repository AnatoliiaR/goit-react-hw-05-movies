{"version":3,"file":"static/js/996.a5652aef.chunk.js","mappings":"0LACA,EAAuB,wBAAvB,EAAsD,wB,SCGhDA,EAAY,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACnBC,QAAQC,IAAIF,GACZ,IAAMG,GAAWC,EAAAA,EAAAA,MACXC,EAAWL,EAAQM,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,EAAcC,SAAd,OAC3B,yBACE,SAAC,KAAD,CACEC,UAAWC,EACXC,GAAE,kBAAaL,GACfM,MAAO,CAAEC,KAAMX,GAHjB,SAKGK,KANID,EADkB,IAY7B,OAAO,eAAIG,UAAWC,EAAf,SAA4BN,GACpC,EAED,IAEAN,EAAUgB,aAAe,CACvBf,QAAS,G,wGCLX,UAhBiB,WACf,OAA0BgB,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,gHAEWC,EAAAA,EAAAA,MAFX,gBAEPrB,EAFO,EAEPA,QACRkB,EAASlB,GAHM,yGAAH,qDAMhBoB,GACD,GAAE,KAEI,SAAC,IAAD,CAAWpB,QAASiB,GAC5B,C,sLChBKK,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAL,EAAa,mCAAG,+GAAOM,EAAP,+BAAc,EACnCC,EAAO,OACPC,EAAO,QAFc,SAGJP,EAASQ,IAAT,oBAA0BD,EAA1B,YAAkCD,EAAlC,iBAA+CD,IAH3C,uBAGnBI,EAHmB,EAGnBA,KAHmB,kBAIpBA,GAJoB,2CAAH,qDAObC,EAAS,mCAAG,WAAMC,GAAN,+EACV,QADU,SAEAX,EAASQ,IAAT,WADV,QACU,YAAyBG,IAFzB,uBAEfF,EAFe,EAEfA,KAFe,kBAGhBA,GAHgB,2CAAH,sDAMTG,EAAY,mCAAG,WAAOC,GAAP,gGAAUR,EAAV,+BAAiB,EACrCE,EAAO,QADa,SAEHP,EAASQ,IAAT,kBACVD,EADU,iBACGF,EADH,kBACiBQ,IAHd,uBAElBJ,EAFkB,EAElBA,KAFkB,kBAKnBA,GALmB,2CAAH,sDAQZK,EAAW,mCAAG,WAAMH,GAAN,+EACZ,QADY,SAEFX,EAASQ,IAAT,WADV,QACU,YAAyBG,EAAzB,aAFE,uBAEjBF,EAFiB,EAEjBA,KAFiB,kBAGlBA,GAHkB,2CAAH,sDAMXM,EAAW,mCAAG,WAAMJ,GAAN,+EACZ,QADY,SAEFX,EAASQ,IAAT,WADV,QACU,YAAyBG,EAAzB,aAFE,uBAEjBF,EAFiB,EAEjBA,KAFiB,kBAGlBA,GAHkB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","pages/HomePages/Home.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieList_list__yjDCC\",\"link\":\"MovieList_link__+cn-g\"};","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport style from './MovieList.module.css';\n\nconst MovieList = ({ results }) => {\n  console.log(results);\n  const location = useLocation();\n  const elements = results.map(({ id, title, overview }) => (\n    <li key={id}>\n      <Link\n        className={style.link}\n        to={`/movies/${id}`}\n        state={{ from: location }}\n      >\n        {title}\n      </Link>\n    </li>\n  ));\n\n  return <ul className={style.list}>{elements}</ul>;\n};\n\nexport default MovieList;\n\nMovieList.defaultProps = {\n  results: [],\n};\n\nMovieList.propTypes = {\n  results: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n    })\n  ),\n};\n","import { fetchTrending } from '../../services/api';\nimport MovieList from 'components/MovieList';\nimport { useEffect, useState } from 'react';\n\nconst HomePage = () => {\n  const [items, setItems] = useState([]);\n\n  useEffect(() => {\n    const fetchTrend = async () => {\n      try {\n        const { results } = await fetchTrending();\n        setItems(results);\n      } catch (error) {}\n    };\n    fetchTrend();\n  }, []);\n\n  return <MovieList results={items} />;\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '248abd3b176f582e9e747718a352534c',\n  },\n});\n\nexport const fetchTrending = async (page = 1) => {\n  const time = 'week';\n  const type = 'movie';\n  const { data } = await instance.get(`/trending/${type}/${time}?page=${page}`);\n  return data;\n};\n\nexport const fetchById = async Id => {\n  const type = 'movie';\n  const { data } = await instance.get(`/${type}/${Id}`);\n  return data;\n};\n\nexport const fetchByQuery = async (q, page = 1) => {\n  const type = 'movie';\n  const { data } = await instance.get(\n    `/search/${type}?page=${page}&query=${q}`\n  );\n  return data;\n};\n\nexport const fetchCredit = async Id => {\n  const type = 'movie';\n  const { data } = await instance.get(`/${type}/${Id}/credits`);\n  return data;\n};\n\nexport const fetchReview = async Id => {\n  const type = 'movie';\n  const { data } = await instance.get(`/${type}/${Id}/reviews`);\n  return data;\n};\n"],"names":["MovieList","results","console","log","location","useLocation","elements","map","id","title","overview","className","style","to","state","from","defaultProps","useState","items","setItems","useEffect","fetchTrend","fetchTrending","instance","axios","baseURL","params","api_key","page","time","type","get","data","fetchById","Id","fetchByQuery","q","fetchCredit","fetchReview"],"sourceRoot":""}